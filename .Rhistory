setwd("/Volumes/GoogleDrive/My Drive/projects/drug_repo/DR")
source("functions.R")
source("functions.R")
source("functions.R")
source("functions.R")
test <- Download_GDAC(tumor.name = "XX", path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_GDAC(tumor.name = "XX", path.to.folder = "~/Desktop")
paste0
paste0(c(1,2,3))
source("functions.R")
test <- Download_GDAC(tumor.name = "XX", path.to.folder = "~/Desktop")
test <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
test <- Download_GDAC(tumor.name = "UCS", path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
tmp <- "/Desktop/gdac.broadinstitute.org_LIHC.Merge_rnaseqv2__illuminahiseq_rnaseqv2__unc_edu__Level_3__RSEM_genes__data.Level_3.2014051800.0.0/LIHC.rnaseqv2__illuminahiseq_rnaseqv2__unc_edu__Level_3__RSEM_genes__data.data.txt"
tmp2 <- "/Desktop/gdac.broadinstitute.org_LIHC.Merge_rnaseqv2__illuminahise/LIHC.rnaseqv2__illuminahiseq_rnaseqv2__unc_edu__Level_3__RSEM_genes__data.data.txt"
source("functions.R")
test <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
dim(test)
dim(test[[1]])
names(test)
source("functions.R")
test <- Download_GEO("GSE2109", path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_GEO("GSE2109", path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
("functions.R")
source("functions.R")
test <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
head(test)
test <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
source("functions.R")
test <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
dim(test)
source("functions.R")
df.gdac <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
df.expo <- Download_GEO(geo.accs = 'GSE2109', path.to.folder = "~/Desktop")
df.ccle <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
df.ccle.metadata <- Download_CCLE_Metadata(path.to.folder = "~/Desktop")
dim(df.gdac)
dim(df.gdac[[1]])
dim(df.expo[[1]])
# unlist
df.gdac <- df.gdac[[1]]
df.geo <- df.geo[[1]]
df.expo <- df.expo[[1]]
#
source("Get_Gene_Mapping_Dict.R")
#
source("Get_Gene_Mapping_Dict.R")
expo.name.dict <- name_dict('affy', row.names(df.expo))
expo.name.dict <- Get_Gene_Mapping_Dict('affy', row.names(df.expo))
expo.name.dict <- Get_Gene_Mapping_Dict('affy_hg_u133_plus_2', row.names(df.expo))
# dict
source("Get_Gene_Mapping_Dict.R")
# dict
source("Get_Gene_Mapping_Dict.R")
expo.name.dict <- Get_Gene_Mapping_Dict('affy_hg_u133_plus_2', row.names(df.expo))
head(expo.name.dict)
ccle.name.dict <- Get_Gene_Mapping_Dict('ensembl_gene_id', row.names(df.ccle))
gdac.name.dict <- Get_Gene_Mapping_Dict('entrezgene', row.names(df.gdac))
View
View(ccle.name.dict)
head(ccle)
head(df.ccle)
rownames(df.ccle)
gdac.name.dict
row.names(df.gdac)
row.names(df.gdac)[1]
row.names(df.gdac)[2,2]
row.names(df.gdac)[1]
row.names(df.gdac)[10]
strsplit(row.names(df.gdac)[10], "|")
# dict
source("Get_Gene_Mapping_Dict.R")
gdac.name.dict <- Get_GDAC_Name_Dict(row.names(df.gdac))
# dict
source("Get_Gene_Mapping_Dict.R")
gdac.name.dict <- Get_GDAC_Name_Dict(row.names(df.gdac))
head(gdac.name.dict)
head(df.gdac)
head(df.gdac, n= 1)
gdac.name.dict <- Get_GDAC_Name_Dict(row.names(df.gdac[-1,]))
head(gdac.name.dict)
dim(gdac.name.dict)
tail(gdac.name.dict)
# dict
source("Get_Gene_Mapping_Dict.R")
ccle.name.dict <- Get_CCLE_Name_Dict(row.names(df.ccle))
# dict
source("Get_Gene_Mapping_Dict.R")
head(ccle.name.dict)
# download the data
source("data_download.R")
# download the data
source("data_download.R")
# download the data
source("data_download.R")
df.ccle <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
# download the data
source("data_download.R")
str_match()
# download the data
source("data_download.R")
df.ccle <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
rowna
rownames(df.ccle)
# download the data
source("data_download.R")
df.ccle <- Download_CCLE_RPKM(path.to.folder = "~/Desktop")
dim(df.ccle)
# map and aggregate
source("data_combining.R")
df.ccle.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.ccle, database.name = "CCLE")
save.image("../DR.RData")
dim(df.ccle.mapped)
df.add.one.col <- as.tibble(df.ccle.mapped)
tmp <- df.add.one.col %>% group_by(GeneID) %>% summarise_all(mean)
df.add.one.col$GeneID
tmp <- df.add.one.col %>% group_by(GeneID)
tmp
head(tmp)
df.add.one.col[1,1]
df.add.one.col[1,2]
df.ccle[1,1]
df.ccle[1,14]
tmp <- as.tibble(df.ccle)
tmp[1,1]
tmp[1,12]
# map and aggregate
source("data_combining.R")
df.ccle.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.ccle, database.name = "CCLE")
df.ccle.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.ccle[,1:5], database.name = "CCLE")
df.ccle.mapped[1,1]
df.ccle.mapped[1,2]
# map and aggregate
source("data_combining.R")
df.ccle.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.ccle[,1:5], database.name = "CCLE")
df.ccle.mapped[1,1]
df.ccle.mapped[1,2]
# map and aggregate
source("data_combining.R")
df.ccle.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.ccle, database.name = "CCLE")
dim(df.ccle.mapped)
# download the data
source("data_download.R")
list.gdac <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
# download the data
source("data_download.R")
list.df.gdac <- Download_GDAC(tumor.name = "LIHC", path.to.folder = "~/Desktop")
df.gdac.metadata <- list.df.gdac$metadata
df.gdac <- list.df.gdac$exp
colnames(df.gdac)
df.gdac.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.gdac, database.name = "GDAC")
# map and aggregate
source("data_combining.R")
df.gdac.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.gdac, database.name = "GDAC")
rownames(df.gdac.mapped)
rownames(df.gdac)
tmp <- Get_GDAC_Name_Dict(rownames(df.gdac))
tmp
dim(tmp)
dim(df.gdac)
# map and aggregate
source("data_combining.R")
df.gdac.mapped <- Map_Data_To_Unifying_Gene_Name(df = df.gdac, database.name = "GDAC")
dim(df.gdac.mapped)
rownames(df.gdac.mapped)
# save
save.image("../DR.RData")
# load data from disk
df.gdac <- readRDS("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.mapped.Rda")
# load data from disk
df.gdac <- readRDS("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.mapped.RData")
# load data from disk
df.gdac <- readRDS("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.mapped.rds")
# load data from disk
df.gdac <- readRDS("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.mapped.rds")
# load data from disk
df.gdac <- load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.mapped.rds")
dim(df.gdac)
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.ccle.mapped.Rda")
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.ccle.metadata.Rda")
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.expo.mapped.Rda")
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.gdac.metadata.Rda")
df.ccle.metadata$Source
View
View(df.ccle.metadata)
# random 1k sampls from expo
df.expo.random.1k <- df.expo.mapped[,sample(1:ncol(df.expo.mapped), 1000)]
# IQR
df.ccle.mapped <- df.ccle.mapped[order(-apply(as.matrix(df.ccle.mapped), 1, IQR)),]
View(df.ccle.metadata)
df.ccle.metadata$Site.Primary == "liver"
sum(df.ccle.metadata$Site.Primary == "liver")
View(df.ccle.metadata)
sum(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma")
rownames(df.ccle.mapped)
which(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma")
df.ccle.other.top5k <- df.ccle.mapped[gene.top5k.overlap,which(!df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma")]
df.ccle.other.top5k <- df.ccle.mapped[gene.top5k.overlap,which(!(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma"))]
(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma")
!(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma")
which(!(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma"))
df.ccle.other.top5k <- df.ccle.mapped[gene.top5k.overlap,which(!(df.ccle.metadata$Site.Primary == "liver" & df.ccle.metadata$Histology == "carcinoma"))]
dim(df.ccle.mapped)
dim(df.ccle.metadata)
rownames(df.ccle.metadata)
colnames(df.ccle.mapped)
colnames(df.ccle.mapped) %in% rownames(df.ccle.metadata)
sum(colnames(df.ccle.mapped) %in% rownames(df.ccle.metadata))
sum(colnames(df.ccle.mapped) %in% df.ccle.metadata$Cell.line.primary.name)
df.ccle.new <- df.ccle.mapped[,which(colnames(df.ccle.mapped) %in% rownames(df.ccle.metadata))]
dim(df.ccle.new)
df.ccle.metadata.new <- df.ccle.metadata[which(rownames(df.ccle.metadata) %in% colnames(df.ccle.new)),]
dim(df.ccle.metadata.new)
which(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma")
sum(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma")
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.ccle.mapped.Rda")
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.ccle.metadata.Rda")
df.ccle.new <- df.ccle.mapped[,which(colnames(df.ccle.mapped) %in% rownames(df.ccle.metadata))]
df.ccle.metadata.new <- df.ccle.metadata[which(rownames(df.ccle.metadata) %in% colnames(df.ccle.new)),]
# random 1k sampls from expo
df.expo.random.1k <- df.expo.mapped[,sample(1:ncol(df.expo.mapped), 1000)]
# IQR
df.ccle.new <- df.ccle.new[order(-apply(as.matrix(df.ccle.new), 1, IQR)),]
# top 5K variable genes based on IQR
gene.top5k <- rownames(df.ccle.new)[1:5000]
gene.top5k.overlap <- intersect(gene.top5k, rownames(df.expo.mapped))
gene.top5k.overlap <- intersect(gene.top5k.overlap, rownames(df.gdac.mapped))
df.ccle.hcc.top5k <- df.ccle.new[gene.top5k.overlap,which(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma")]
df.ccle.other.top5k <- df.ccle.new[gene.top5k.overlap,which(!(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma"))]
dim(df.ccle.hcc.top5k)
dim(df.ccle.other.top5k)
rownames(df.ccle.hcc.top5k) == rownames(df.ccle.other.top5k)
sum(rownames(df.ccle.hcc.top5k) == rownames(df.ccle.other.top5k))
sum(intersect(gene.top5k, rownames(df.expo.mapped)))
length(intersect(gene.top5k, rownames(df.expo.mapped)))
dim(df.ccle.hcc.top5k)
dim(df.ccle.other.top5k)
cor.gdac.hcc <- cor(df.gdac.mapped[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
df.gdac.mapped[1,1]
df.gdac.mapped[1,2]
df.gdac.mapped[2,1]
rownames(df.gdac.mapped)
rownames(df.gdac.mapped) == df.gdac.mapped[,1]
# process
df.gdac.mapped <- df.gdac.mapped[,-1]
dim(df.gdac.mapped)
df.gdac.mapped[1,1]
#cor between GDAC and CCLE
cor.gdac.hcc <- cor(df.gdac.mapped[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
cor.gdac.other <- cor(df.gdac.mapped[gene.top5k.overlap,], df.ccle.other.top5k, method = "spearman")
dim(cor.gdac.hcc)
dim(cor.gdac.other)
pvalue.vec <- c()
for (i in 1:nrow(cor.gdac.hcc)){
pvalue.vec[i] <- (wilcox.test(cor.gdac.hcc[i,], cor.gdac.other[i,]))$p.value
}
pvalue.vec
df.expo.mapped[1,1]
df.expo.mapped[2,1]
df.expo.mapped[2,2]
df.expo.mapped <- df.expo.mapped[,-1]
load("~/Google Drive File Stream/Team Drives/Startup/bin_chen/data/df.expo.mapped.Rda")
df.expo.mapped <- df.expo.mapped[,-1]
# random 1k sampls from expo
df.expo.random.1k <- df.expo.mapped[,sample(1:ncol(df.expo.mapped), 1000)]
rownames(df.expo.mapped)
cor.expo.hcc <- cor(df.expo.mapped[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
cor.expo.other <- cor(df.expo.mapped[gene.top5k.overlap,], df.ccle.other.top5k, method = "spearman")
#cor between GDAC and CCLE
set.seed(100)
cor.expo.hcc <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
cor.expo.other <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.other.top5k, method = "spearman")
dim(cor.expo.hcc)
dim(cor.expo.other)
pvalue.vec.expo <- c()
for (i in 1:nrow(cor.expo.hcc)){
pvalue.vec.expo[i] <- (wilcox.test(cor.expo.hcc[i,], cor.expo.other[i,]))$p.value
}
# cut-off
pvalue.cutoff <- sort(pvalue.vec.expo, increasing = T)[50]
# cut-off
pvalue.cutoff <- sort(pvalue.vec.expo, decreasing = F)[50]
pvalue.cutoff
sort(pvalue.vec.expo, decreasing = F)[1:10]
sum(pvalue.vec < pvalue.cutoff)
dim(df.gdac.mapped)
sum(pvalue.vec > pvalue.cutoff)
# random 1k sampls from expo
set.seed(10)
df.expo.random.1k <- df.expo.mapped[,sample(1:ncol(df.expo.mapped), 1000)]
#cor between GDAC and CCLE
cor.expo.hcc <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
cor.expo.other <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.other.top5k, method = "spearman")
# calculate the p-value
pvalue.vec.expo <- c()
for (i in 1:nrow(cor.expo.hcc)){
pvalue.vec.expo[i] <- (wilcox.test(cor.expo.hcc[i,], cor.expo.other[i,]))$p.value
}
# cut-off
pvalue.cutoff <- sort(pvalue.vec.expo, decreasing = F)[50]
pvalue.cutoff
# random 1k sampls from expo
set.seed(20)
df.expo.random.1k <- df.expo.mapped[,sample(1:ncol(df.expo.mapped), 1000)]
#cor between EXPO and CCLE
cor.expo.hcc <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.hcc.top5k, method = "spearman")
cor.expo.other <- cor(df.expo.random.1k[gene.top5k.overlap,], df.ccle.other.top5k, method = "spearman")
# calculate the p-value
pvalue.vec.expo <- c()
for (i in 1:nrow(cor.expo.hcc)){
pvalue.vec.expo[i] <- (wilcox.test(cor.expo.hcc[i,], cor.expo.other[i,]))$p.value
}
# cut-off
pvalue.cutoff <- sort(pvalue.vec.expo, decreasing = F)[50]
pvalue.cutoff
View(df.gdac.metadata)
gene.top5k.overlap.expo <- intersect(gene.top5k, rownames(df.expo.mapped))
gene.top5k.overlap.expo
length(gene.top5k.overlap.expo)
length(gene.top5k.overlap)
#cor between EXPO and CCLE
cor.expo.hcc <- cor(df.expo.random.1k[gene.top5k.overlap.expo,], df.ccle.hcc.top5k, method = "spearman")
dim(df.ccle.hcc.top5k)
dim(df.expo.random.1k[gene.top5k.overlap.expo,])
df.ccle.hcc.top5k.expo <- df.ccle.new[gene.top5k.overlap.expo,which(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma")]
df.ccle.other.top5k.expo <- df.ccle.new[gene.top5k.overlap.expo,which(!(df.ccle.metadata.new$Site.Primary == "liver" & df.ccle.metadata.new$Histology == "carcinoma"))]
cor.expo.hcc <- cor(df.expo.random.1k[gene.top5k.overlap.expo,], df.ccle.hcc.top5k.expo, method = "spearman")
cor.expo.other <- cor(df.expo.random.1k[gene.top5k.overlap.expo,], df.ccle.other.top5k.expo, method = "spearman")
# calculate the p-value
pvalue.vec.expo <- c()
for (i in 1:nrow(cor.expo.hcc)){
pvalue.vec.expo[i] <- (wilcox.test(cor.expo.hcc[i,], cor.expo.other[i,]))$p.value
}
# cut-off
pvalue.cutoff <- sort(pvalue.vec.expo, decreasing = F)[50]
pvalue.cutoff
sum(pvalue.vec > pvalue.cutoff)
sum(pvalue.vec > 0.001)
sum(pvalue.vec > 0.0001)
sum(pvalue.vec > pvalue.cutoff)
length(pvalue.vec.expo)
sort(pvalue.vec.expo[1:50]
)
sort(pvalue.vec.expo)[1:50]
# save
save.image("../DR.RData")
